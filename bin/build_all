#!/bin/bash
#
# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

# Exit on non-zero exit code from subcommand
set -e

usage() {
    echo "Usage:"
    echo "  $0"
    echo
    echo "Options:"
    echo "  -h            print usage and exit"
}

info() {
    echo -e "\033[0;36m\n[--- $1 ---]\n\033[0m"
}

warn() {
    echo -e "\033[0;31m\n[--- $1 ---]\n\033[0m"
}

while getopts :x:l:h opt
do
    case $opt in
        h)
            usage
            exit 0
            ;;

        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
    esac
done
shift $(($OPTIND-1))

main() {
    # Set project directory relative to this file
    top_dir=$(cd $(dirname $(dirname $0)) && pwd)

    # Start in project directory
    cd $top_dir

    docker_build server/Dockerfile . supply-chain-server
    docker_build docker/supply-chain-dev-python . supply-chain-dev-python
    docker_build processor/Dockerfile processor/ supply-tp
    docker_build docker/supply-chain-dev-rust . supply-chain-dev-rust
    docker_run supply-chain-dev-rust
}

docker_run() {
    image=$1

    if [ -z $ISOLATION_ID ]; then
        tag=$image
    else
        tag=$image:$ISOLATION_ID
    fi

    info "Running $image"
    if [ -z $BUILD_TAG ]
    then
        docker run -t --rm -v $top_dir:/project/sawtooth-supply-chain \
            --env https_proxy=$https_proxy \
            --env http_proxy=$http_proxy \
            --env HTTPS_PROXY=$HTTPS_PROXY \
            --env HTTP_PROXY=$HTTP_PROXY \
            $tag
    else
        docker run --rm -v $top_dir:/project/sawtooth-supply-chain \
            --env https_proxy=$https_proxy \
            --env http_proxy=$http_proxy \
            --env HTTPS_PROXY=$HTTPS_PROXY \
            --env HTTP_PROXY=$HTTP_PROXY \
            $tag
    fi
}

docker_build() {
    image=$1
    context=$2
    tag=$3

    if [ ! -z $ISOLATION_ID ]
    then
        tag=$tag:$ISOLATION_ID
    fi

    info "Building $tag from $image"

    # Build the image and pass in any proxy information if set
    docker build -f $image -t $tag $context \
        --build-arg https_proxy=$https_proxy \
        --build-arg http_proxy=$http_proxy \
        --build-arg HTTPS_PROXY=$HTTPS_PROXY \
        --build-arg HTTP_PROXY=$HTTP_PROXY
}

main
